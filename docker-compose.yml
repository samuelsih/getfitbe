version: '3'

services:    
  soketi:
    container_name: soketi
    image: quay.io/soketi/soketi:1.4-16-alpine
    ports: 
      - 6001:6001
      - 9601:9601
    environment:
      SOKETI_DEBUG: 1
      SOKETI_DEFAULT_APP_ID: getfitsoketi
      SOKETI_DEFAULT_APP_KEY: getfitkey
      SOKETI_DEFAULT_APP_SECRET: getfitsecret 
      PUSHER_HOST: '127.0.0.1'
      PUSHER_PORT: '6001'
      PUSHER_SCHEME: http
      METRICS_SERVER_PORT: '9601'

  redis:
    container_name: redis
    image: redis:7.2.3-alpine3.18
    restart: always
    ports: 
      - 6379:6379
    environment:
      REDIS_HOST: redis
      REDIS_PASSWORD: password
      REDIS_PORT: 6379
    volumes:
      - rd_data:/data

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: getfit
      POSTGRES_USER: getfit
      POSTGRES_PASSWORD: password
    ports:
      - '6969:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d/

  minio:
      container_name: minio
      image: minio/minio
      ports:
        - "9000:9000"
        - "9001:9001"
      volumes:
        - minio_storage:/data
      environment:
        MINIO_ROOT_USER: minio
        MINIO_ROOT_PASSWORD: password
      command: server --console-address ":9001" /data
  
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio password;
      /usr/bin/mc mb myminio/getfitimg;
      /usr/bin/mc mb myminio/profile;
      /usr/bin/mc anonymous set public myminio/getfitimg;
      /usr/bin/mc anonymous set public myminio/profile;
      exit 0;
      "

volumes:
  rd_data:
  minio_storage:
  pg_data:
